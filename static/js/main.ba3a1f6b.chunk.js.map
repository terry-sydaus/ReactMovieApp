{"version":3,"sources":["header/Header.js","main/navigation/Selection.js","main/navigation/Slider.js","main/navigation/Button.js","main/navigation/Navigation.js","main/movies/MovieListItem.js","main/movies/Movies.js","movie/LoadingMovie.js","main/Main.js","movie/Movie.js","NotFound.js","App.js","index.js"],"names":["Header","react_default","a","createElement","Selection","_ref","genre","onGenreChange","genres","className","value","onChange","map","key","id","name","Slider","range","console","log","_this","props","type","data","label","_this$props$data","this","min","max","step","js_default","minValue","maxValue","React","Component","Button","onClick","children","Navigation","tempFunction","_this$props","setGenres","genresURL","concat","process","fetch","then","response","json","catch","error","_this$props2","onSearchButtonClick","year","rating","runtime","main_navigation_Selection","main_navigation_Slider","main_navigation_Button","MovieListItem","movie","title","poster_path","release_date","vote_average","imgUrl","substring","react_router_dom","to","src","alt","Movies","movies","page","onPageIncrease","onPageDecrease","main_movies_MovieListItem","LoadingMovie","Main","state","moviesUrl","total_pages","isLoading","saveStateToLocalStorage","localStorage","setItem","JSON","stringify","getStateFromLocalStorage","parse","getItem","fetchMovies","url","storeMovies","results","result","vote_count","genre_ids","setState","generateUrl","params","genreId","find","event","target","Object","defineProperty","objectSpread","_this$state","nextPage","savedState","length","prevProps","prevState","snapshot","main_navigation_Navigation","assign","movie_LoadingMovie","main_movies_Movies","Movie","_this2","movieId","match","movieUrl","_this$state$movie","backdrop_path","overview","releaseYear","backdropStyle","backgroundImage","style","index","NotFound","App","src_header_Header","react_router","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ba3a1f6b.chunk.js","sourcesContent":["// Header.js\n//\nimport React from 'react';\nimport './Header.css';\n\nconst Header = () => (\n  <header>\n    <h1>Sweet Pumpkins</h1>\n  </header>\n);\n\nexport default Header;\n","/* Selection.js */\n\nimport React from 'react';\nimport './Selection.css';\n\n//class Selection extends React.Component {\nconst Selection = ({ genre, onGenreChange, genres }) => (\n      <div className='selection'>\n\t<label>Genre</label>\n\t<select value={genre} onChange={onGenreChange}>\n\t  {genres.map( genre => (\n\t    <option key={genre.id} value={genre.name}>{genre.name}</option>\n\t  ))}\n\t</select>\n      </div>\n    );\n\nexport default Selection;\n","/* Slider.js */\n\nimport React from 'react';\nimport InputRange from 'react-input-range';\n\nimport 'react-input-range/lib/css/index.css';\nimport './Slider.css';\n\nclass Slider extends React.Component {\n  onChange = range => {\n    console.log(range);\n    //range is an object that is created by the InputRange onChange event and this object has\n    //2 properties, namely, 'min' and 'max', whose values are determined by the positions \n    //that the sliders were adjusted to.\n    this.props.onChange({\n      type: this.props.data.label,\n      value: range\n    });\n  }\n\n  render() {\n    const { min, max, step, value, label } = this.props.data;\n    return (\n      <div className='slider'>\n\t<label>{label}</label>\n\t<InputRange\n\t  minValue={min}\n\t  maxValue={max}\n\t  step={step}\n\t  onChange={this.onChange}\n\t  value={value}\n\t/>\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","/* Button.js */\nimport React from 'react';\nimport './Button.css';\n\nconst Button = ({ onClick, children }) => (\n<div className='search-button'>\n<button onClick={onClick}>{children}</button>\n</div>\n)\n\nexport default Button;\n","// Navigation.js\n\n\nimport React from 'react';\nimport Selection from './Selection';\nimport Slider from './Slider';\nimport Button from './Button';\nimport './Navigation.css';\n\nclass Navigation extends React.Component {\n\n  componentDidMount() {\n    const { setGenres, genres } = this.props;\n    const genresURL = `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`\n    fetch(genresURL)\n      .then(response => response.json())\n    //the following console.log when used as a second optional parameter\n    // to the setState method *does* work.\n    .then(data => setGenres(data.genres), function() {console.log(genres);})\n    //.then(data => this.tempFunction(data))\n    .catch(error => console.log(error));\n    // the following console.log does not work\n    //console.log(this.state.genres);\n  }\n\n  componentDidUpdate() {\n    //console.log(this.state.genres);\n  }\n\n  //console.log(this.state.genres);\n\n  tempFunction = data => {\n    console.log(data.genres);\n  }\n\n\n  render() {\n    const { genre, genres, onGenreChange, onChange, onSearchButtonClick, year, rating, runtime } = this.props;\n    return (\n      <section className='navigation'>\n\t<Selection\n\t  genres={genres}\n\t  genre={genre}\n\t  onGenreChange={onGenreChange}\n\t/>\n\t<Slider\n\t  data={year}\n\t  onChange={onChange}\n\t/>\n\t<Slider\n\t  data={rating}\n\t  onChange={onChange}\n\t/>\n\t<Slider\n\t  data={runtime}\n\t  onChange={onChange}\n\t/>\n\t<Button onClick={onSearchButtonClick}>\n\t  Search\n\t</Button>\n      </section>\n    );\n  }\n}\n\nexport default Navigation;\n","// MovieListItem.js\n\nimport React from 'react';\nimport './MovieListItem.css';\nimport { Link } from 'react-router-dom';\n\nconst MovieListItem = ({ movie }) => {\n  const { id, title, poster_path, release_date, vote_average } = movie;\n  const imgUrl = `https://image.tmdb.org/t/p/w342/${poster_path}`;\n  const year = `${release_date}`.substring(0,4);\n  //console.log(rating);\n\n  return (\n  <li className='movie-item'>\n    <Link to={`/movies/${id}`} className='thumbnail'>\n      <img src={imgUrl} alt={title}/>\n      <div className='movie-description'>\n\t<h2>{title}</h2>\n\t<section className='movie-details'>\n\t  <div className='movie-year'>\n\t    <span className='title'>Year</span>\n\t    <span>{year}</span>\n\t  </div>\n\t  <div className='movie-rating'>\n\t    <span className='title'>Rating</span>\n\t    <span>{vote_average}</span>\n\t  </div>\n\t</section>\n      </div>\n    </Link>\n  </li>\n  );\n}\n\nexport default MovieListItem;\n","// Movies.js\n\nimport React from 'react';\nimport './Movies.css';\nimport MovieListItem from './MovieListItem';\nimport Button from '../navigation/Button';\nimport '../navigation/Button.css';\n\n//const movies =['Breaking Bad', 'Narcos', 'Game of Thrones'];\n\nconst Movies = ({\n  movies,\n  page,\n  onPageIncrease,\n  onPageDecrease\n}) => (\n  /* \n  componentDidMount() {\n    const apiUrl = `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`;\n    fetch(apiUrl)\n    //Could also use the following as url is passed in with props\n    //fetch(this.props.url)\n      .then(response => response.json())\n    // It is not necessary to do the following in order to populate\n    // the movies state array with the values fetched.\n    //.then(data => this.storeMovies(data))\n    // The following is all that is required.\n      .then(data => this.setState({ movies: data.results }))\n      .catch(error => console.log(error));\n    //console.log(this.state.movies);\n  }\n\n  storeMovies = data => {\n    console.log(data);\n    const movies = data.results.map( result => {\n      const { vote_count, id, genre_ids, poster_path, title, vote_average, release_date } = result;\n      //return { vote_count: vote_count, id: id, genre_ids: genre_ids, poster_path: poster_path, title: title, vote_average: vote_average, release_date: release_date };\n      // The retrn below is the same as the return above, it is just move verbose.\n      // It returns an object as an element on each iteration of the map method and adds another object element to the array called movies.\n      return { vote_count, id, genre_ids, poster_path, title, vote_average, release_date };\n    });\n    // The bottom line is that when I mention just one entity in an object, ie. { temp }, this will be interpreted as temp being both the key and the value. If the value does not exist\n    // then an error will be thrown, if it does, then it is legal. In other words, { temp } is exactly the same as { temp: temp }\n\n    // this.setState({ movies: movies }); // could also have just placed { movies } inside the this.setState method's parentheses. Like this:\n    this.setState({ movies }); \n  }\n  */\n      <section> \n\t<div className='pagination'>\n\t  <Button onClick={onPageDecrease}>Previous</Button>\n\t  <span>{`Page ${page}`}</span>\n\t  <Button onClick={onPageIncrease}>Next</Button>\n\t</div>\n\t<ul className='movies'>\n\t  { movies.map( movie => (\n\t      <MovieListItem key={movie.id} movie={movie} />\n\t    ))}\n\t</ul>\n\t<div className='pagination'>\n\t  <Button onClick={onPageDecrease}>Previous</Button>\n\t  <span>{`Page ${page}`}</span>\n\t  <Button onClick={onPageIncrease}>Next</Button>\n\t</div>\n      </section>\n)\n\nexport default Movies;\n","// LoadingMovie.js\nimport React from 'react';\n\nconst LoadingMovie = () => <h2>Loading Movie</h2>;\n\nexport default LoadingMovie;\n","// Main.js\n\nimport React from 'react';\nimport './Main.css';\nimport Navigation from './navigation/Navigation';\nimport Movies from './movies/Movies';\nimport LoadingMovie from '../movie/LoadingMovie';\n\nclass Main extends React.Component {\n  state = { \n    genre: 'Comedy',\n    genres: [],\n    moviesUrl:  `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=true&include_video=false&page=1`,\n    movies: [],\n    page: 1,\n    total_pages: 1,\n    year: {\n      label: 'year',\n      min: 1980,\n      max: 2019,\n      step: 1,\n      value: { min: 2000, max: 2017 }\n    },\n    rating: {\n      label: 'rating',\n      min: 0,\n      max: 10,\n      step: 1,\n      value: { min: 8, max: 10 }\n    },\n    runtime: {\n      label: 'runtime',\n      min: 0,\n      max: 300,\n      step: 15,\n      value: { min: 60, max: 120 }\n    },\n    isLoading: true\n  };\n\n  saveStateToLocalStorage = () => {\n    localStorage.setItem('sweetpumpkins.params', JSON.stringify(this.state));\n  }\n\n  getStateFromLocalStorage = () => {\n    return JSON.parse(localStorage.getItem('sweetpumpkins.params'));\n  }\n\n  // the following method is triggered just once, after this\n  // component (Main, in this case) has loaded.\n  componentDidMount() {\n    const savedState = this.getStateFromLocalStorage();\n    if ( !savedState || (savedState && !savedState.movies.length)) {\n    //console.log(this.props.url)\n    this.fetchMovies(this.state.moviesUrl);\n    console.log('Mount component did mount');\n    } else {\n      this.setState({...savedState});\n      this.generateUrl(savedState);\n    }\n  }\n\n  // the following method is triggered when any state is changed.\n  //componentWillUpdate(nextProps, nextState) {\n  // and as of March 2019, the official React documnentation states that this method \n  // is being deprecated and should not be used.\n  // \n  // The following method is invoked immediately after updating occurs and is *not* called for the \n  // iniital render. Updating occurs automatically when props or state is changed.\n   componentDidUpdate(prevProps, prevState, snapshot) {\n    this.saveStateToLocalStorage();\n\n    console.log('Main component did update...');\n     //console.log(prevState);\n     if ('moviesUrl' in prevState) {\n\tif (this.state.moviesUrl !== prevState.moviesUrl) {\n     //console.log('Main component did update...');\n     //console.log(this.state.moviesUrl + '.....\\r\\n' + prevState.moviesUrl);\n\t  console.log('Main component did update...--> moviesUrl change');\n\t  this.fetchMovies(this.state.moviesUrl);\n\t}\n     }\n\n     if ('page' in prevState) {\n\tif(this.state.page !== prevState.page) {\n     //console.log('updated page number: ' + this.state.page\n     // + '....previous page number: ' + prevState.page);\n     console.log('Main component did update...--> page change');\n      //console.log('page button pressed');\n      //console.log(this.state.page + '.....' + nextState.page);\n     this.generateUrl(this.state);\n\t}\n     }\n  }\n  \n\n  fetchMovies = (url) => {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.storeMovies(data))\n      .catch(error => console.log(error));\n  }\n\n  storeMovies = data => {\n    //console.log(data);\n    const movies = data.results.map( result => {\n      const { vote_count, id, genre_ids, poster_path, title, vote_average, release_date } = result;\n      //return { vote_count: vote_count, id: id, genre_ids: genre_ids, poster_path: poster_path, title: title, vote_average: vote_average, release_date: release_date };\n      // The retrn below is the same as the return above, it is just move verbose.\n      // It returns an object as an element on each iteration of the map method and adds another object element to the array called movies.\n      return { vote_count, id, genre_ids, poster_path, title, vote_average, release_date };\n    });\n    // The bottom line is that when I mention just one entity in an object, ie. { temp }, this will be interpreted as temp being both the key and the value. If the value does not exist\n    // then an error will be thrown, if it does, then it is legal. In other words, { temp } is exactly the same as { temp: temp }\n\n    // this.setState({ movies: movies }); // could also have just placed { movies } inside the this.setState method's parentheses. Like this:\n    this.setState({ movies, total_pages: data.total_pages, isLoading: false }); \n  }\n\n  generateUrl = params => {\n    const { genres, year, rating, runtime, page } = params;\n    //console.log(page);\n    const selectedGenre = genres.find(genre => genre.name === params.genre);\n    const genreId = selectedGenre.id;\n\n    const moviesUrl = `https://api.themoviedb.org/3/discover/movie?` +\n      `api_key=${process.env.REACT_APP_TMDB_API_KEY}&` +\n      `language=en-US&sort_by=popularity.desc&` +\n      `with_genres=${genreId}&` +\n      `primary_release_date.gte=${year.value.min}-01-01&` +\n      `primary_release_date.lte=${year.value.max}-12-31&` +\n      `vote_average.gte=${rating.value.min}&` +\n      `vote_average.lte=${rating.value.max}&` +\n      `with_runtime.gte=${runtime.value.min}&` +\n      `with_runtime.lte=${runtime.value.max}&` +\n      `page=${page}`;\n    //console.log(moviesUrl);\n\n    this.setState({ moviesUrl });\n  }\n\n  onGenreChange = event => {\n    this.setState({\n      genre: event.target.value,\n      //page: 1\n    });\n  }\n\n  onChange = data => {\n    this.setState({\n      [data.type]: {\n\t...this.state[data.type], // new state is the entire old state (spread (...) operator achieves this) \n\tvalue: data.value // new state value property then set to value passed to this function from the slider \n      }\n    });\n  }\n\n  setGenres = genres => {\n    this.setState({genres});\n  }\n\n      \n  onSearchButtonClick = event => {\n    //alert('hi there ' + this.state.genre);\n    this.setState({ page: 1 });\n    this.generateUrl(this.state);\n  }\n\n\n  onPageIncrease = () => {\n    const { page, total_pages } = this.state;\n    const nextPage = page + 1;\n    if (nextPage <= total_pages) {\n    //this.setState({ page: nextPage }, function() { console.log(this.state.page) } );\n    //this.setState({ page: nextPage }, this.generateUrl() );\n      this.setState({ page: nextPage });\n    // console.log(this.state.page);\n    }\n  }\n\n\n  onPageDecrease = () => {\n    const { page } = this.state;\n    const nextPage = page - 1;\n    if ( nextPage > 0 ) {\n      //this.setState({ page: nextPage }, function() { console.log(this.state.page) } );\n      //this.setState({ page: nextPage }, this.generateUrl() );\n      this.setState({ page: nextPage });\n      //this.setState({ page: nextPage });\n      //    console.log(this.state.page);\n    }\n  }\n\n  render() {\n    console.log('Main component render to v dom');\n    console.log('Page number for Main component render is ' +\n      this.state.page);\n    return (\n      <section className='main'>\n\t<Navigation\n\t  onGenreChange={this.onGenreChange}\n\t  onChange={this.onChange}\n\t  setGenres={this.setGenres}\n\t  onSearchButtonClick={this.onSearchButtonClick}\n\t  {...this.state}\n\t/>\n\t{this.state.isLoading\n\t? <LoadingMovie />\n\t: <Movies\n\t    movies={this.state.movies}\n\t    page={this.state.page}\n\t    onPageIncrease={this.onPageIncrease}\n\t    onPageDecrease={this.onPageDecrease}\n\t  />\n\t}\n      </section>\n    )\n  }\n}\n\nexport default Main;\n","// Movie.js\n\nimport React from 'react';\nimport LoadingMovie from './LoadingMovie';\nimport './Movie.css';\n\nclass Movie extends React.Component {\n  state = {\n    movie: {},\n    isLoading: true\n  }\n\n  componentDidMount() {\n    const { movieId } = this.props.match.params;\n    const movieUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`;\n    fetch(movieUrl)\n      .then(response => response.json())\n      .then(data => this.setState({ movie: data, isLoading: false }))\n      .catch(error => console.log('Error:', error));\n  }\n\n  render() {\n    const {\n      title,\n      backdrop_path,\n      release_date,\n      genres,\n      overview,\n      vote_average,\n      runtime\n    } = this.state.movie;\n    const releaseYear = release_date ? release_date.substring(0, 4) : null;\n    const imgUrl = `https://image.tmdb.org/t/p/w1280/${backdrop_path}`;\n    const backdropStyle = {\n      backgroundImage: `url(${imgUrl})`\n    };\n    console.log(title);\n    console.log(backdropStyle);\n\n    return (\n      <div className='movie-page'>\n\t{this.state.isLoading\n\t    ? <LoadingMovie />\n\t    : <div>\n\t\t<div className='movie-backdrop' style={backdropStyle} />\n\t\t<div className='movie-details'>\n\t\t  <h1>\n\t\t    {title}\n\t\t    <span>({releaseYear})</span>\n\t\t  </h1>\n\t\t  <section className='genres'>\n\t\t    {genres.map((genre, index) => (\n\t\t      <div key={genre.id}>\n\t\t\t<span>{genre.name}</span>\n\t\t\t{index < genres.length -1 && (\n\t\t\t  <span className='separator'>|</span>\n\t\t\t)}\n\t\t      </div>\n\t\t    ))}\n\t\t  </section>\n\t\t  <h5>\n\t\t    Rating:\n\t\t    <span>{vote_average}</span>\n\t\t  </h5>\n\t\t  <h5>\n\t\t    Runtime:\n\t\t    <span>{`${runtime} min`}</span>\n\t\t  </h5>\n\t\t  <h4>Overview</h4>\n\t\t  <p>{overview}</p>\n\t\t</div>\n\t      </div>\n\t}\n      </div>\n    )\n  }\n}\n\nexport default Movie;\n","// NotFound.js\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => (\n  <div>\n    <h3>We couldn't find what you were looking for :(</h3>\n    <Link to='/'>Here you can browse the movies</Link>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './header/Header';\nimport Main from './main/Main';\nimport Movie from './movie/Movie';\nimport NotFound from './NotFound';\n\nconst App = () => {\n  console.log('API key for TJM:', process.env.REACT_APP_TMDB_API_KEY);\n  return (\n    <BrowserRouter>\n      <div>\n\t<Header />\n\t<Switch>\n\t  <Route exact path='/' component={Main} />\n\t  <Route path='/movies/:movieId' component={Movie} />\n\t  <Route component={NotFound} />\n\t</Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n//\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}